{"ast":null,"code":"import axios from 'axios';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'Queue',\n  data() {\n    return {\n      selectedService: '',\n      services: [],\n      currentQueue: {\n        currentServing: '',\n        currentWaiting: '',\n        totalServed: 0\n      },\n      loading: false\n    };\n  },\n  computed: {\n    ...mapState(['queueData', 'shopId', 'token'])\n  },\n  created() {\n    this.getServices();\n    this.getCurrentQueue();\n  },\n  mounted() {\n    this.$store.dispatch('getQueueStatus', this.shopId);\n  },\n  methods: {\n    // 获取服务列表\n    async getServices() {\n      try {\n        this.loading = true;\n        const res = await axios.get(`/api/v1/shops/${this.shopId}/services`);\n        this.services = res.data.data;\n        this.selectedService = this.services.length > 0 ? this.services[0].id : '';\n      } catch (error) {\n        console.error('获取服务列表失败:', error);\n        this.$toast('获取服务列表失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取当前叫号情况\n    async getCurrentQueue() {\n      try {\n        const res = await axios.get('/api/v1/queue/current', {\n          params: {\n            shop_id: this.shopId\n          }\n        });\n        this.currentQueue = res.data.data;\n      } catch (error) {\n        console.error('获取当前叫号情况失败:', error);\n      }\n    },\n    // 取号\n    async getNumber() {\n      if (!this.token) {\n        alert('请先登录');\n        return;\n      }\n      if (!this.selectedService) {\n        alert('请选择服务');\n        return;\n      }\n      try {\n        this.loading = true;\n        await axios.post('/api/v1/queue/number', {\n          shop_id: this.shopId,\n          service_id: this.selectedService\n        });\n\n        // 更新排队状态\n        await this.$store.dispatch('getQueueStatus', this.shopId);\n        await this.getCurrentQueue();\n        alert('取号成功');\n      } catch (error) {\n        console.error('取号失败:', error);\n        alert(error.response?.data?.message || '取号失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 取消排队\n    async cancelQueue() {\n      if (confirm('确定要取消当前排队吗？')) {\n        try {\n          this.loading = true;\n          await axios.delete('/api/v1/queue/number', {\n            data: {\n              shop_id: this.shopId\n            }\n          });\n\n          // 更新排队状态\n          await this.$store.dispatch('getQueueStatus', this.shopId);\n          await this.getCurrentQueue();\n          alert('已取消排队');\n        } catch (error) {\n          console.error('取消排队失败:', error);\n          alert(error.response?.data?.message || '取消排队失败');\n        } finally {\n          this.loading = false;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","mapState","name","data","selectedService","services","currentQueue","currentServing","currentWaiting","totalServed","loading","computed","created","getServices","getCurrentQueue","mounted","$store","dispatch","shopId","methods","res","get","length","id","error","console","$toast","params","shop_id","getNumber","token","alert","post","service_id","response","message","cancelQueue","confirm","delete"],"sources":["/home/makenumberserver/vue/src/views/Queue.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"title\">海娜纹身排队</div>\r\n    \r\n    <!-- 当前排队状态 -->\r\n    <div class=\"status-card card\">\r\n      <div class=\"text-center\">\r\n        <div class=\"subtitle mb-1\">当前状态</div>\r\n        <div :class=\"['status-text', queueData.hasNumber ? 'active' : '']\">\r\n          {{ queueData.hasNumber ? '排队中' : '未取号' }}\r\n        </div>\r\n        <template v-if=\"queueData.hasNumber\">\r\n          <div class=\"mb-1\">您的号码: {{ queueData.queueNumber }}</div>\r\n          <div class=\"mb-1\">前方等待: {{ queueData.peopleAhead }} 人</div>\r\n          <div>预计等待: {{ queueData.waitTime }} 分钟</div>\r\n        </template>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 取号区域 -->\r\n    <div class=\"card\">\r\n      <template v-if=\"!queueData.hasNumber\">\r\n        <div class=\"subtitle\">选择服务</div>\r\n        <div class=\"mb-4\">\r\n          <div v-for=\"item in services\" :key=\"item.id\" class=\"radio-item\">\r\n            <label>\r\n              <input \r\n                type=\"radio\" \r\n                :value=\"item.id\" \r\n                v-model=\"selectedService\" \r\n              />\r\n              <span>{{ item.name }} (约{{ item.duration }}分钟)</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button \r\n          class=\"btn btn-primary w-full\" \r\n          @click=\"getNumber\" \r\n          :disabled=\"loading\"\r\n        >\r\n          {{ loading ? '处理中...' : '立即取号' }}\r\n        </button>\r\n      </template>\r\n      \r\n      <template v-else>\r\n        <div class=\"text-center\">\r\n          <div class=\"queue-number\">{{ queueData.queueNumber }}</div>\r\n          <div class=\"mb-4\">请留意叫号提醒</div>\r\n          <button \r\n            class=\"btn btn-danger\" \r\n            @click=\"cancelQueue\" \r\n            :disabled=\"loading\"\r\n          >\r\n            {{ loading ? '处理中...' : '取消排队' }}\r\n          </button>\r\n        </div>\r\n      </template>\r\n    </div>\r\n    \r\n    <!-- 当前叫号情况 -->\r\n    <div class=\"card\">\r\n      <div class=\"subtitle\">当前叫号</div>\r\n      <div class=\"call-container\">\r\n        <div class=\"call-status\">\r\n          <div class=\"call-number text-success\">{{ currentQueue.currentServing || '-' }}</div>\r\n          <div class=\"text-sm text-gray\">正在服务</div>\r\n        </div>\r\n        <div class=\"call-status\">\r\n          <div class=\"call-number text-info\">{{ currentQueue.currentWaiting || '-' }}</div>\r\n          <div class=\"text-sm text-gray\">请就位</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"text-xs text-gray\">\r\n        今日已服务: {{ currentQueue.totalServed || 0 }} 位顾客\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: 'Queue',\r\n  data() {\r\n    return {\r\n      selectedService: '',\r\n      services: [],\r\n      currentQueue: {\r\n        currentServing: '',\r\n        currentWaiting: '',\r\n        totalServed: 0\r\n      },\r\n      loading: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['queueData', 'shopId', 'token'])\r\n  },\r\n  created() {\r\n    this.getServices()\r\n    this.getCurrentQueue()\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch('getQueueStatus', this.shopId)\r\n  },\r\n  methods: {\r\n    // 获取服务列表\r\n    async getServices() {\r\n      try {\r\n        this.loading = true\r\n        const res = await axios.get(`/api/v1/shops/${this.shopId}/services`)\r\n        this.services = res.data.data\r\n        this.selectedService = this.services.length > 0 ? this.services[0].id : ''\r\n      } catch (error) {\r\n        console.error('获取服务列表失败:', error)\r\n        this.$toast('获取服务列表失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    // 获取当前叫号情况\r\n    async getCurrentQueue() {\r\n      try {\r\n        const res = await axios.get('/api/v1/queue/current', {\r\n          params: { shop_id: this.shopId }\r\n        })\r\n        this.currentQueue = res.data.data\r\n      } catch (error) {\r\n        console.error('获取当前叫号情况失败:', error)\r\n      }\r\n    },\r\n\r\n    // 取号\r\n    async getNumber() {\r\n      if (!this.token) {\r\n        alert('请先登录')\r\n        return\r\n      }\r\n      \r\n      if (!this.selectedService) {\r\n        alert('请选择服务')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        this.loading = true\r\n        await axios.post('/api/v1/queue/number', {\r\n          shop_id: this.shopId,\r\n          service_id: this.selectedService\r\n        })\r\n        \r\n        // 更新排队状态\r\n        await this.$store.dispatch('getQueueStatus', this.shopId)\r\n        await this.getCurrentQueue()\r\n        \r\n        alert('取号成功')\r\n      } catch (error) {\r\n        console.error('取号失败:', error)\r\n        alert(error.response?.data?.message || '取号失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    // 取消排队\r\n    async cancelQueue() {\r\n      if (confirm('确定要取消当前排队吗？')) {\r\n        try {\r\n          this.loading = true\r\n          await axios.delete('/api/v1/queue/number', {\r\n            data: { shop_id: this.shopId }\r\n          })\r\n          \r\n          // 更新排队状态\r\n          await this.$store.dispatch('getQueueStatus', this.shopId)\r\n          await this.getCurrentQueue()\r\n          \r\n          alert('已取消排队')\r\n        } catch (error) {\r\n          console.error('取消排队失败:', error)\r\n          alert(error.response?.data?.message || '取消排队失败')\r\n        } finally {\r\n          this.loading = false\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.status-card {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.status-text {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin: 10px 0;\r\n  color: var(--gray-500);\r\n  \r\n  &.active {\r\n    color: var(--primary-color);\r\n  }\r\n}\r\n\r\n.radio-item {\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  input {\r\n    margin-right: 10px;\r\n  }\r\n}\r\n\r\n.queue-number {\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  color: var(--primary-color);\r\n  margin: 15px 0;\r\n}\r\n\r\n.call-container {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin: 20px 0;\r\n}\r\n\r\n.call-status {\r\n  text-align: center;\r\n}\r\n\r\n.call-number {\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}