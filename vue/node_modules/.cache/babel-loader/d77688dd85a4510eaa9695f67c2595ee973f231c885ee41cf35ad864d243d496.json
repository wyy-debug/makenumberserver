{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    userInfo: null,\n    shopInfo: null,\n    token: localStorage.getItem('token') || '',\n    baseUrl: '/api/v1',\n    queueData: {\n      hasNumber: false,\n      queueNumber: null,\n      peopleAhead: 0,\n      waitTime: 0\n    },\n    shopId: 1\n  },\n  getters: {\n    isAuthenticated: state => !!state.token,\n    getQueueData: state => state.queueData,\n    getShopInfo: state => state.shopInfo\n  },\n  mutations: {\n    setUserInfo(state, userInfo) {\n      state.userInfo = userInfo;\n    },\n    setToken(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n    },\n    clearToken(state) {\n      state.token = '';\n      localStorage.removeItem('token');\n    },\n    setQueueData(state, queueData) {\n      state.queueData = queueData;\n    },\n    setShopInfo(state, shopInfo) {\n      state.shopInfo = shopInfo;\n    }\n  },\n  actions: {\n    async login({\n      commit,\n      dispatch\n    }, code) {\n      try {\n        const res = await axios.post(`${this.state.baseUrl}/auth/login`, {\n          code\n        });\n        const {\n          token,\n          user\n        } = res.data.data;\n        commit('setToken', token);\n        commit('setUserInfo', user);\n\n        // 获取店铺信息\n        dispatch('getShopInfo', this.state.shopId);\n\n        // 获取排队状态\n        dispatch('getQueueStatus', this.state.shopId);\n        return user;\n      } catch (error) {\n        console.error('登录失败:', error);\n        throw error;\n      }\n    },\n    async getShopInfo({\n      commit\n    }, shopId) {\n      try {\n        const res = await axios.get(`${this.state.baseUrl}/shops/${shopId}`);\n        commit('setShopInfo', res.data.data);\n        return res.data.data;\n      } catch (error) {\n        console.error('获取店铺信息失败:', error);\n        throw error;\n      }\n    },\n    async getQueueStatus({\n      commit\n    }, shopId) {\n      if (!this.state.token) return;\n      try {\n        const res = await axios.get(`${this.state.baseUrl}/queue/status`, {\n          params: {\n            shop_id: shopId\n          },\n          headers: {\n            Authorization: `Bearer ${this.state.token}`\n          }\n        });\n        commit('setQueueData', res.data.data);\n        return res.data.data;\n      } catch (error) {\n        console.error('获取排队状态失败:', error);\n        throw error;\n      }\n    },\n    // 设置请求拦截器以处理token\n    setupAxios({\n      state,\n      commit\n    }) {\n      axios.interceptors.request.use(config => {\n        if (state.token) {\n          config.headers.Authorization = `Bearer ${state.token}`;\n        }\n        return config;\n      }, error => Promise.reject(error));\n      axios.interceptors.response.use(response => response, error => {\n        if (error.response && error.response.status === 401) {\n          commit('clearToken');\n          commit('setUserInfo', null);\n        }\n        return Promise.reject(error);\n      });\n    }\n  }\n});","map":{"version":3,"names":["createStore","axios","state","userInfo","shopInfo","token","localStorage","getItem","baseUrl","queueData","hasNumber","queueNumber","peopleAhead","waitTime","shopId","getters","isAuthenticated","getQueueData","getShopInfo","mutations","setUserInfo","setToken","setItem","clearToken","removeItem","setQueueData","setShopInfo","actions","login","commit","dispatch","code","res","post","user","data","error","console","get","getQueueStatus","params","shop_id","headers","Authorization","setupAxios","interceptors","request","use","config","Promise","reject","response","status"],"sources":["/home/makenumberserver/vue/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\nimport axios from 'axios'\r\n\r\nexport default createStore({\r\n  state: {\r\n    userInfo: null,\r\n    shopInfo: null,\r\n    token: localStorage.getItem('token') || '',\r\n    baseUrl: '/api/v1',\r\n    queueData: {\r\n      hasNumber: false,\r\n      queueNumber: null,\r\n      peopleAhead: 0,\r\n      waitTime: 0\r\n    },\r\n    shopId: 1\r\n  },\r\n  getters: {\r\n    isAuthenticated: state => !!state.token,\r\n    getQueueData: state => state.queueData,\r\n    getShopInfo: state => state.shopInfo\r\n  },\r\n  mutations: {\r\n    setUserInfo(state, userInfo) {\r\n      state.userInfo = userInfo\r\n    },\r\n    setToken(state, token) {\r\n      state.token = token\r\n      localStorage.setItem('token', token)\r\n    },\r\n    clearToken(state) {\r\n      state.token = ''\r\n      localStorage.removeItem('token')\r\n    },\r\n    setQueueData(state, queueData) {\r\n      state.queueData = queueData\r\n    },\r\n    setShopInfo(state, shopInfo) {\r\n      state.shopInfo = shopInfo\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit, dispatch }, code) {\r\n      try {\r\n        const res = await axios.post(`${this.state.baseUrl}/auth/login`, { code })\r\n        const { token, user } = res.data.data\r\n        commit('setToken', token)\r\n        commit('setUserInfo', user)\r\n        \r\n        // 获取店铺信息\r\n        dispatch('getShopInfo', this.state.shopId)\r\n        \r\n        // 获取排队状态\r\n        dispatch('getQueueStatus', this.state.shopId)\r\n        \r\n        return user\r\n      } catch (error) {\r\n        console.error('登录失败:', error)\r\n        throw error\r\n      }\r\n    },\r\n    \r\n    async getShopInfo({ commit }, shopId) {\r\n      try {\r\n        const res = await axios.get(`${this.state.baseUrl}/shops/${shopId}`)\r\n        commit('setShopInfo', res.data.data)\r\n        return res.data.data\r\n      } catch (error) {\r\n        console.error('获取店铺信息失败:', error)\r\n        throw error\r\n      }\r\n    },\r\n    \r\n    async getQueueStatus({ commit }, shopId) {\r\n      if (!this.state.token) return\r\n      \r\n      try {\r\n        const res = await axios.get(`${this.state.baseUrl}/queue/status`, {\r\n          params: { shop_id: shopId },\r\n          headers: { Authorization: `Bearer ${this.state.token}` }\r\n        })\r\n        commit('setQueueData', res.data.data)\r\n        return res.data.data\r\n      } catch (error) {\r\n        console.error('获取排队状态失败:', error)\r\n        throw error\r\n      }\r\n    },\r\n    \r\n    // 设置请求拦截器以处理token\r\n    setupAxios({ state, commit }) {\r\n      axios.interceptors.request.use(\r\n        config => {\r\n          if (state.token) {\r\n            config.headers.Authorization = `Bearer ${state.token}`\r\n          }\r\n          return config\r\n        },\r\n        error => Promise.reject(error)\r\n      )\r\n      \r\n      axios.interceptors.response.use(\r\n        response => response,\r\n        error => {\r\n          if (error.response && error.response.status === 401) {\r\n            commit('clearToken')\r\n            commit('setUserInfo', null)\r\n          }\r\n          return Promise.reject(error)\r\n        }\r\n      )\r\n    }\r\n  }\r\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}